docker run -d --hostname my-test-rabbit --name test-rabbit -p 15672:15672 -p 5672:5672 rabbitmq:3-management

docker start **CONTAINER ID**

docker-compose -f stack.yml up

---------------------------------

//@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
//se eu nao quiser usar o h2 posso usar o proprio db anotando com notacao acima

---------------------------------

https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#reference

---------------------------------

Criar uma exchange para cada microservico e uma queue para cada acao desse micro dentro dessa exchange (uma queue pra salvar, outra pra deletar, outra pra update, etc)

Usar a ideia do producer-custom, ligando cada channel criado pelo InboundChannelAdapter a uma exchange
ACho que fica +- assim:
spring.cloud.stream.bindings.savecustomer-channel.destination=customer-chanel (customer-exchange devia chamar customer-exchange)
spring.cloud.stream.bindings.savecustomer-channel.group=savecustomer-queue